<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>$Network_Service response implementation</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>CodeExpression</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>if let statusCode = response?.statusCode {
                        switch statusCode {
                        case 200...299:
                            if let string = JSONString {
                                MBLog.network(MBLog.Level.High, object: "Did <# Name of the request #>: \(string).")
                                fullfil(string)
                            }
                            else {
                                let missingDatasError = LinkydogDogSitterAPIError.MissingData(<# Router name #>Router).error
                                MBLog.error(MBLog.Level.High, object: missingDatasError)
                                reject(missingDatasError)
                            }
                        case 401:
                            let unauthorizedError = <# Service name #>APIError.Unauthorized(<# Router name #>Router).error
                            MBLog.error(MBLog.Level.High, object: unauthorizedError)
                            reject(unauthorizedError)
                        default:
                            if let JSONError = error {
                                MBLog.error(MBLog.Level.High, object: error)
                                reject(JSONError)
                            }
                            else {
                                let missingDatasError = <# Service name #>APIError.Unknown(<# Router name #>Router).error
                                MBLog.error(MBLog.Level.High, object: missingDatasError)
                                reject(missingDatasError)
                            }
                        }
                    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>7C9B5AEA-4B70-4B35-8BBD-45551B42A8A1</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Network Service response implementation</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
